# frozen_string_literal: true

require 'minitest/autorun'
require_relative('../lib/20_trench_map')

describe TrenchMap do
  let(:described_class) { TrenchMap }
  let(:input) { <<~INPUT }
    ..#.#..#####.#.#.#.###.##.....###.##.#..###.####..#####..#....#..#..##..###..######.###...####..#..#####..##..#.#####...##.#.#..#.##..#.#......#.###.######.###.####...#.##.##..#..#..#####.....#.#....###..#.##......#.....#..#..#..##..#...##.######.####.####.#.#...#.......#..#.#.#...####.##.#......#..#...##.#.##..#...##.#.##..###.#......#.#.......#.#.#.####.###.##...#.....####.#..#..#.##.#....##..#.####....##...##..#...#......#.#.......#.......##..####..#...#.#.#...##..#.#..###..#####........#..####......#..#

    #..#.
    #....
    ##..#
    ..#..
    ..###
  INPUT

  def test_part1
    assert_equal 35, described_class.new(input).part1
  end

  def test_part2
    assert_equal 3351, described_class.new(input).part2
  end
end
